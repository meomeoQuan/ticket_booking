// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ticket_booking.Data;

#nullable disable

namespace ticket_booking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121143212_AddLatestTodb")]
    partial class AddLatestTodb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ticket_booking.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Discription = "Description of Movie 1",
                            Title = "Movie 1"
                        },
                        new
                        {
                            MovieId = 2,
                            Discription = "Description of Movie 2",
                            Title = "Movie 2"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            RoomCapacity = 4,
                            RoomStatus = 0
                        },
                        new
                        {
                            RoomId = 2,
                            RoomCapacity = 4,
                            RoomStatus = 0
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatStatus")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("RoomId");

                    b.ToTable("Seat");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            Column = "1",
                            RoomId = 1,
                            Row = "A",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 2,
                            Column = "2",
                            RoomId = 1,
                            Row = "A",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 3,
                            Column = "1",
                            RoomId = 1,
                            Row = "B",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 4,
                            Column = "2",
                            RoomId = 1,
                            Row = "B",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 5,
                            Column = "1",
                            RoomId = 2,
                            Row = "A",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 6,
                            Column = "2",
                            RoomId = 2,
                            Row = "A",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 7,
                            Column = "1",
                            RoomId = 2,
                            Row = "B",
                            SeatStatus = 0
                        },
                        new
                        {
                            SeatId = 8,
                            Column = "2",
                            RoomId = 2,
                            Row = "B",
                            SeatStatus = 0
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.ShowTime", b =>
                {
                    b.Property<int>("ShowTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowTimeId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("ShowTimeStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShowTimeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoomId");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ShowTimeId = 1,
                            MovieId = 1,
                            RoomId = 1,
                            ShowTimeStart = "17:30"
                        },
                        new
                        {
                            ShowTimeId = 2,
                            MovieId = 2,
                            RoomId = 2,
                            ShowTimeStart = "23:00"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.Seat", b =>
                {
                    b.HasOne("ticket_booking.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ticket_booking.Models.ShowTime", b =>
                {
                    b.HasOne("ticket_booking.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticket_booking.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
