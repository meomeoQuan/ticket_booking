// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ticket_booking.Data;

#nullable disable

namespace ticket_booking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250205090723_tt")]
    partial class tt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ticket_booking.Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<DateTime>("ChatTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ticket_booking.Models.ChatMessage", b =>
                {
                    b.Property<int>("ChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatMessageId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("ChatMessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChatMessageTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatMessageId");

                    b.HasIndex("ChatId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("ticket_booking.Models.ChatUser", b =>
                {
                    b.Property<int>("ChatUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatUserId"));

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatUserId");

                    b.HasIndex("ChatId");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("ticket_booking.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Discription = "Description of Movie 1",
                            Title = "Movie 1"
                        },
                        new
                        {
                            MovieId = 2,
                            Discription = "Description of Movie 2",
                            Title = "Movie 2"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            RoomCapacity = 4,
                            RoomStatus = 0
                        },
                        new
                        {
                            RoomId = 2,
                            RoomCapacity = 4,
                            RoomStatus = 0
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SeatStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SeatId");

                    b.HasIndex("RoomId");

                    b.ToTable("Seat");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            RoomId = 1,
                            SeatNumber = "A1",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 2,
                            RoomId = 1,
                            SeatNumber = "A2",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 3,
                            RoomId = 1,
                            SeatNumber = "A3",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 4,
                            RoomId = 1,
                            SeatNumber = "A4",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 5,
                            RoomId = 2,
                            SeatNumber = "B1",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 6,
                            RoomId = 2,
                            SeatNumber = "B2",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 7,
                            RoomId = 2,
                            SeatNumber = "B3",
                            SeatStatus = "Available"
                        },
                        new
                        {
                            SeatId = 8,
                            RoomId = 2,
                            SeatNumber = "B4",
                            SeatStatus = "Available"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.ShowTime", b =>
                {
                    b.Property<int>("ShowTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowTimeId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("ShowTimeStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShowTimeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoomId");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ShowTimeId = 1,
                            MovieId = 1,
                            RoomId = 1,
                            ShowTimeStart = "10:30"
                        },
                        new
                        {
                            ShowTimeId = 2,
                            MovieId = 2,
                            RoomId = 1,
                            ShowTimeStart = "13:00"
                        },
                        new
                        {
                            ShowTimeId = 3,
                            MovieId = 2,
                            RoomId = 2,
                            ShowTimeStart = "16:30"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "User 1"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "User 2"
                        });
                });

            modelBuilder.Entity("ticket_booking.Models.ChatMessage", b =>
                {
                    b.HasOne("ticket_booking.Models.Chat", null)
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ticket_booking.Models.ChatUser", b =>
                {
                    b.HasOne("ticket_booking.Models.Chat", null)
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("ticket_booking.Models.Seat", b =>
                {
                    b.HasOne("ticket_booking.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ticket_booking.Models.ShowTime", b =>
                {
                    b.HasOne("ticket_booking.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticket_booking.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ticket_booking.Models.Chat", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("ChatUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
